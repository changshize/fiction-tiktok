version: '3.8'

services:
  # Database Services
  postgres:
    image: postgres:15
    environment:
      POSTGRES_DB: fiction_tiktok
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/fiction_tiktok
      - REDIS_URL=redis://redis:6379
      - ENVIRONMENT=development
    volumes:
      - ./backend:/app
      - ./data:/app/data
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  # Novel Scraper Service
  novel-scraper:
    build:
      context: ./backend/services/novel_scraper
      dockerfile: Dockerfile
    environment:
      - REDIS_URL=redis://redis:6379
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/fiction_tiktok
    volumes:
      - ./data/novels:/app/data
    depends_on:
      - redis
      - postgres
    restart: unless-stopped

  # Illustration Service
  illustration-service:
    build:
      context: ./backend/services/illustration
      dockerfile: Dockerfile
    environment:
      - REDIS_URL=redis://redis:6379
      - STABLE_DIFFUSION_API_KEY=${STABLE_DIFFUSION_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - ./data/illustrations:/app/data
    depends_on:
      - redis
    restart: unless-stopped

  # TTS Service
  tts-service:
    build:
      context: ./backend/services/tts
      dockerfile: Dockerfile
    environment:
      - REDIS_URL=redis://redis:6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ELEVENLABS_API_KEY=${ELEVENLABS_API_KEY}
    volumes:
      - ./data/audio:/app/data
    depends_on:
      - redis
    restart: unless-stopped

  # Video Composition Service
  video-service:
    build:
      context: ./backend/services/video
      dockerfile: Dockerfile
    environment:
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./data:/app/data
      - /tmp:/tmp
    depends_on:
      - redis
    restart: unless-stopped

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
